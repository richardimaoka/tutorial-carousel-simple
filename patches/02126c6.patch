commit 02126c67f61718cf414b140625fd45fa7811cb3d
Author: Richard Imaoka <richard.e.imaoka@gmail.com>
Date:   Sun May 22 16:11:51 2022 +0900

    replace state with the new style

diff --git a/client/src/App.tsx b/client/src/App.tsx
index ba3ff18..0d717ac 100644
--- a/client/src/App.tsx
+++ b/client/src/App.tsx
@@ -31,14 +31,10 @@ const CarouselItem = ({ imagePath, isSnapped }: CarouselItemProps) => {
 };
 
 interface CarouselContainerProps {
-  imagePathList: string[];
-  snappedImagePath: string;
+  images: ImageState[];
 }
 
-const CarouselContainer = ({
-  imagePathList,
-  snappedImagePath,
-}: CarouselContainerProps) => {
+const CarouselContainer = ({ images }: CarouselContainerProps) => {
   return (
     <div
       style={{
@@ -48,11 +44,11 @@ const CarouselContainer = ({
         scrollSnapType: "x mandatory",
       }}
     >
-      {imagePathList.map((path) => (
+      {images.map((image) => (
         <CarouselItem
-          key={path}
-          imagePath={path}
-          isSnapped={snappedImagePath === path}
+          key={image.imagePath}
+          imagePath={image.imagePath}
+          isSnapped={image.isSnapped}
         />
       ))}
     </div>
@@ -60,16 +56,11 @@ const CarouselContainer = ({
 };
 
 interface CarouselButtonsProps {
-  imagePathList: string[];
-  snappedImagePath: string;
+  images: ImageState[];
   onClick: (buttonIndex: number) => void;
 }
 
-const CarouselButtons = ({
-  imagePathList,
-  snappedImagePath,
-  onClick,
-}: CarouselButtonsProps) => {
+const CarouselButtons = ({ images, onClick }: CarouselButtonsProps) => {
   return (
     <div
       style={{
@@ -78,7 +69,7 @@ const CarouselButtons = ({
         padding: "4px 0px",
       }}
     >
-      {imagePathList.map((path, index) => (
+      {images.map((image, index) => (
         <button
           style={{
             margin: "0px 10px",
@@ -87,9 +78,9 @@ const CarouselButtons = ({
             borderRadius: "20px",
             borderWidth: "0px",
             color: "#ffffff",
-            backgroundColor: path === snappedImagePath ? "#5955D9" : "#bcbbd8",
+            backgroundColor: image.isSnapped ? "#5955D9" : "#bcbbd8",
           }}
-          key={path}
+          key={image.imagePath}
           onClick={() => onClick(index)}
         >
           {index + 1}
@@ -103,7 +94,7 @@ const CarouselControl = () => {
   const [images, setImages] = useState<ImageState[]>([
     {
       imagePath: "/images/1.png",
-      isSnapped: true,
+      isSnapped: true, //initially selected
     },
     {
       imagePath: "/images/2.png",
@@ -114,8 +105,7 @@ const CarouselControl = () => {
       isSnapped: false,
     },
   ]);
-  const imagePathList = ["/images/1.png", "/images/2.png", "/images/3.png"];
-  const [snapped, setSnapped] = useState(imagePathList[0]);
+
   const selectSnapped = (selectIndex: number) => {
     const updated: ImageState[] = images.map((state, index) => ({
       imagePath: state.imagePath,
@@ -126,15 +116,8 @@ const CarouselControl = () => {
 
   return (
     <div style={{ width: "648px" }}>
-      <CarouselContainer
-        imagePathList={imagePathList}
-        snappedImagePath={snapped}
-      />
-      <CarouselButtons
-        imagePathList={imagePathList}
-        snappedImagePath={snapped}
-        onClick={selectSnapped}
-      />
+      <CarouselContainer images={images} />
+      <CarouselButtons images={images} onClick={selectSnapped} />
     </div>
   );
 };
